@model Entidad.Proyecto

@{
	ViewBag.Title = "Crear";
}

<h2>Crear</h2>


<form class="form-group" action="@Url.Action("Crear","Proyecto")" method="post" id="frmProyecto">
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Proyecto</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			<label class="control-label col-md-2">Nombre de Proyecto</label>

			<div class="col-md-7">
				@Html.EditorFor(model => model.NombreProyecto, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese nombre del proyectos" } })
				@Html.ValidationMessageFor(model => model.NombreProyecto, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2 ">Fecha de Inicio</label>
			<div class="col-md-7">
				<input class="form-control Zebra_DatePicker_Icon_Disabled" style="" name="FechaInicio" id="FechaInicio" type="date" />
				@Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<label class="control-label col-md-2">Fecha de Fin</label>
			<div class="col-md-7">
				<input class="form-control" name="FechaFin" id="FechaFin" type="date" />

				@Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Crear Proyecto" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
@section scripts
    {
	@*<script src="https://cdn.jsdelivr.net/npm/gasparesganga-jquery-loading-overlay@2.1.7/dist/loadingoverlay.min.js"></script>*@


	<script>
		

			$("#frmProyecto").submit(function (Event) {
				Event.preventDefault();
				var nombreProy = $("#NombreProyecto").val();
				var FechaIni = $("#FechaInicio").val();
				var FechaFin = $("#FechaFin").val();

				if ($.trim(nombreProy) == "") {
					alert("Nombre de proyecto no válido");
					return;
				}
				if (FechaIni == "" || FechaFin == "") {
					alert("Especifique Fecha de inicio y Fecha Fin");
					return;
				}
				if (!ValidarFecha(FechaIni, FechaFin)) {
					alert("La Fecha Fin no puede ser menor que la Fecha Inicial");
					return;
				}


				var post_url = $(this).attr("action");
				var post_method = $(this).attr("method");
				var post_parametros = $(this).serializeArray();

				console.log(post_parametros);
				LoadingOverlayShow("#frmProyecto");
				$.ajax({
					url: post_url,
					type: post_method,
					data: post_parametros
				}).done(function (response) {

					LoadingOverlayHide("#frmProyecto");

					if (response.ok) {
						alert("Proceso funcionó correctamente");
						
						window.location = response.toRedirect;
					}
					else {
						alert(response.msg);
					}

				}).fail(function (jqXHR, textStatus, errorThrown) { })
				LoadingOverlayHide("#frmProyecto");
				//objeto jqXHR: Es un objeto jqXHR que contiene todos los datos de la solicitud Ajax realizada
				//incluyendo la propiedad jqXHR.status que contiene entre otros posibler el codigo HTTP de la respuesta
				//objeto textStatus: texto que describe el tipo de error, que puede ser, ademas de null
				//"abort","timeout", "No transport" o "parseerror"
				//objeto errorThrow: si hay un error HTTP, errorThrown contiene el texto de la cabecera HTTP de estado.
				//por ejemplo: Para un error HTTP 404 errorThrown es "Not Found"; para un error HTTP 500 es "Internal Server Error"
			})
		

	</script>
} 